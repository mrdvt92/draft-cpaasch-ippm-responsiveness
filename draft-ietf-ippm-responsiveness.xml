<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.3.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-03" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2024" month="July" day="08"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 84?>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our network connections continue to suffer from an unacceptable amount
of latency, not for a lack of technical solutions, but rather a lack of awareness
of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with goodput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<?line 113?>

<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/>, Cake <xref target="Cake"/> or L4S <xref target="RFC9330"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., goodput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

<t>This document imports terminology and concepts from <xref target="RFC9110"/>, such as request
and response header fields and content.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
The traditional delay measurement tools use ICMP, which may experience even
more drastically different behavior than TCP or UDP.
Thus, a good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there is some hop
along the path with the lowest capacity for that path.
If that hop were to be improved by increasing its capacity, then some other hop would
become the new lowest-capacity hop for that path.
In this context a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow's share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing in the network only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in their network connection. Therefore:</t>

<t><list style="numbers" type="1">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC9293"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (it is left to the implementation to chose a suitable time-limit and we recommend for
any implementation to allow the user to configure the duration of the test).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers" type="1">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server is fully utilized at its capacity
and the buffer or the Active Queue Management (AQM) are also used at their maximum, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>For all these reasons, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debugging the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition - once goodput is maximized - if the transport protocol emits more
traffic into the network than is needed, the additional traffic will either
get dropped or be buffered and thus create a "standing queue" that is characteristic
of bufferbloat.
At this moment the test starts
measuring the responsiveness until that metric reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm presumes that goodput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, goodput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase goodput is by
adding more TCP connections to the pool of load-generating connections.
If new connections don't result in an increase in goodput,
full link utilization has been reached.
At this point, adding more connections will allow to achieve full buffer occupancy.
Responsiveness will decrease from now on, until the buffers
are entirely full and stability is reached.</t>

</section>
<section anchor="avoiding-test-hardware-bottlenecks"><name>Avoiding Test Hardware Bottlenecks</name>

<t>The Responsiveness Test could be run from various devices which are either consumer devices
or internet infrastructure such as routers. Many routers are cost-sensitive embedded devices
optimised for switching packets rather than terminating TLS connections at line rate. As a
result, they may not have sufficient processing power or memory bandwidth to saturate a
bottleneck link in order to be a useful test client for the responsiveness test.</t>

<t>In order to measure responsiveness from these devices, the test can be conducted without TLS
over plain HTTP. Whenever possible, it is preferred to test using TLS to resemble typical
internet traffic to the maximum extent.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>INP</c>
      <c>Initial number of concurrent transport connections at the start of the test</c>
      <c>1</c>
      <c>INC</c>
      <c>Number of transport connections to add to the pool of load-generating connections at each interval</c>
      <c>1</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers" type="1">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. In the case that TLS is not being used, it is undefined.
And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_l</spanx>). For cases where multiplexing GET requests into
the load generation connections is not possible (e.g. due to only HTTP/1.1 being available), the TCP
stack estimated round-trip-time can be used as a proxy or substitute value.</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_l</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The same amount of probes should be sent on load-generating as well as on separate connections.
The probes should be spread out equally over the duration of the interval, with the two types
of probes interleaving with each other.
The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<section anchor="for-the-tls-enabled-case"><name>For the TLS-Enabled Case</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a single-sided trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the average of the "foreign responsiveness"
on separate connections and the responsiveness on load-generating connections.</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f) + TM(tls_f) + TM(http_f)) / 3)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
<section anchor="for-the-tcp-only-case"><name>For the TCP-Only Case</name>

<t>If there are no TLS connections being used, then the notion of a normalised round-trip time for the TLS handshake does not apply.
Zeroes cannot be substituted for <spanx style="verb">tls_f</spanx>, as that will result in an artificially low responsiveness value.
Instead, the same principle of giving each contribution to the foreign RTT equal weight, and then giving the foreign and self RTTs
equal weights is applied.</t>

<t>The TCP-only responsiveness is therefore calculated in the folowing way:</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f) + TM(http_f)) / 2)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of the final algorithm. In order to measure the worst-case latency, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique
ensures that we quickly reach full capacity.
In parallel of this process we send responsiveness probes.
First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, the responsiveness stability is tracked
until it is shown to be stable at which point the final measurement can be computed.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the immediately preceding MAD intervals is within SDT
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval <spanx style="verb">p</spanx>: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create INP load-generating connections (INP defaults to 1, but can be increased if one has prior knowledge on the capacity of the link).</t>
  <t>Launch a new foreign and self probe (according to the specification set forth
above) every 1/<spanx style="verb">MPS</spanx> seconds until <spanx style="verb">MPS</spanx>*<spanx style="verb">ID</spanx> pairs of probes have been launched
or the end of the interval is reached, whichever comes first.
probes to not exceed the percentage of total capacity (PTC).</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create INC additional load-generating connections (INC defaults to 1, but can be increased for a more aggressive ramp-up phase).</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that implementations may chose to implement a time-limit
on the duration of the test.
If stability is not reached within the time-frame, the implementation can report
the current results with a indication of confidence in the result as described in
the following section.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute MAD iterations of the specific stage. Meaning, the moving average is
not taking the full window into account. This can happen if the time-limit of the
test has been reached before MAD intervals could execute.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least MAD
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies. Which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate. The confidence score should be reported to the user as part of
the main results.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This is fully intentioinal as the properties of the
client and the server implementations have a direct impact on the perceived responsiveness by the user. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators" and similar
middleboxes.
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of AQM and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

<t>Beyond the server's networking stack influence, the server selection impacts the
result as well. First, the network path chosen between client and server is influenced
by the server selection. Second, the network stack deployed on the selected server
may not be representative for workloads that are relevant to the user running the test.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. To gain this insight, implementations of the responsiveness
test are encouraged to have an optional verbose mode that exposes the inner workings
of the algorithm as well as statistics from the lower layers.
The following is a non-exhaustive list of additional information that can be exposed
in the verbose mode: Idle-latency (measured at the beginning from the initial connections),
achieved capacity on load-generating connections, TM(tcp_f), TM(tls_f), TM(http_f) and TM(http_l)
(and even their raw values), HTTP-protocol (HTTP/1.1, HTTP/2, HTTP/3), transport protocol (TCP, QUIC, ...), congestion-control
algorithm (Cubic, BBR, ...) used on the client-side, ECN or L4S statistics, IP version, ... and many more.</t>

<t>The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

<t>Beyond the difference in the latency of the load-generating connections and the
separate connections, another element can provide additional information: Namely
testing against different servers located in different places along the path will
allow, to some extent, the opportunity to separate the network’s path in different segments. For
example, if the cable modem and a more distant ISP server are hosting
responsiveness measurement endpoints, some localization of the issue can be done.
If the RPM to the cable modem is very high, it means that the network segment
from the client endpoint to the cable modem does not have responsiveness issues,
thus allowing the user to conclude that possible responsiveness issues are
beyond the cable modem.
It must be noted, though, that due to the high level approach to the testing
(including HTTP), a low responsiveness to the cable modem does not necessarily
mean that the network between client and cable modem is the problem (as
outlined in the above previous paragraphs).</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and POST in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a request with a GET or POST method.
The client MUST send the GET with the "Accept-Encoding" header set to "identity" to ensure the
server will not compress the data.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to respond to a GET request with content.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers" type="1">
  <t>A "small" URL/response:
The server must respond with a status code of 200 (OK) and 1 byte of content.
The actual message content is irrelevant.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 (OK) and content size of at least 8GB.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The content can be larger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary content size.
The server should discard the content.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains JSON configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers" type="1">
  <t>"What's causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?"</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI that contains a valid JSON object
meeting the following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider requires to pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field. The client is then expected to use "test_endpoint" when
resolving the hostname for the URLs</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application
name is "nq" (e.g., https://nq.example.com/.well-known/nq).
The media type of the resource at the well-known URI is "application/json" and
the format of the resource is as specified above. The URI scheme is "https".
No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/>
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations that apply to any Active
Measurement of live paths are relevant here. See <xref target="RFC4656"></xref> and <xref target="RFC5357"></xref>.</t>

<t>If server-side resources are a concern, a server can choose to not reply or delay
its response to the initial request for the configuration information through the
.well-known URL.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry as defined by <xref target="RFC5785"></xref>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry" in the System Range.  The registry for
that range requires IETF Review or IESG Approval <xref target="RFC6335"></xref>.</t>

<t>Service Name: nq
Transport Protocol: TCP
Assignee: <contact fullname="Stuart Cheshire"/>
Contact: <contact fullname="Stuart Cheshire"/>
Description: Network Quality test server endpoint</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz and Felix Gaudin for their
enthusiasm around the project and the development
of the Go responsiveness measurement tool and the librespeed implementation.
We also thank Lucas Pardue, Sebastian Moeller, Rich Brown, Erik Auerswald, Matt Mathis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="Cake" >
  <front>
    <title>Piece of CAKE: A Comprehensive Queue Management Solution for Home Gateways</title>
    <author initials="T." surname="Høiland-Jørgensen">
      <organization></organization>
    </author>
    <author initials="D." surname="Taht">
      <organization></organization>
    </author>
    <author initials="J." surname="Morton">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="2018 IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)" value=""/>
</reference>


<reference anchor="RFC1034">
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname="P. Mockapetris" initials="P." surname="Mockapetris"/>
    <date month="November" year="1987"/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="13"/>
  <seriesInfo name="RFC" value="1034"/>
  <seriesInfo name="DOI" value="10.17487/RFC1034"/>
</reference>

<reference anchor="RFC4656">
  <front>
    <title>A One-way Active Measurement Protocol (OWAMP)</title>
    <author fullname="S. Shalunov" initials="S." surname="Shalunov"/>
    <author fullname="B. Teitelbaum" initials="B." surname="Teitelbaum"/>
    <author fullname="A. Karp" initials="A." surname="Karp"/>
    <author fullname="J. Boote" initials="J." surname="Boote"/>
    <author fullname="M. Zekauskas" initials="M." surname="Zekauskas"/>
    <date month="September" year="2006"/>
    <abstract>
      <t>The One-Way Active Measurement Protocol (OWAMP) measures unidirectional characteristics such as one-way delay and one-way loss. High-precision measurement of these one-way IP performance metrics became possible with wider availability of good time sources (such as GPS and CDMA). OWAMP enables the interoperability of these measurements. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4656"/>
  <seriesInfo name="DOI" value="10.17487/RFC4656"/>
</reference>

<reference anchor="RFC5357">
  <front>
    <title>A Two-Way Active Measurement Protocol (TWAMP)</title>
    <author fullname="K. Hedayat" initials="K." surname="Hedayat"/>
    <author fullname="R. Krzanowski" initials="R." surname="Krzanowski"/>
    <author fullname="A. Morton" initials="A." surname="Morton"/>
    <author fullname="K. Yum" initials="K." surname="Yum"/>
    <author fullname="J. Babiarz" initials="J." surname="Babiarz"/>
    <date month="October" year="2008"/>
    <abstract>
      <t>The One-way Active Measurement Protocol (OWAMP), specified in RFC 4656, provides a common protocol for measuring one-way metrics between network devices. OWAMP can be used bi-directionally to measure one-way metrics in both directions between two network elements. However, it does not accommodate round-trip or two-way measurements. This memo specifies a Two-Way Active Measurement Protocol (TWAMP), based on the OWAMP, that adds two-way or round-trip measurement capabilities. The TWAMP measurement architecture is usually comprised of two hosts with specific roles, and this allows for some protocol simplifications, making it an attractive alternative in some circumstances. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5357"/>
  <seriesInfo name="DOI" value="10.17487/RFC5357"/>
</reference>

<reference anchor="RFC5785">
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <author fullname="E. Hammer-Lahav" initials="E." surname="Hammer-Lahav"/>
    <date month="April" year="2010"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5785"/>
  <seriesInfo name="DOI" value="10.17487/RFC5785"/>
</reference>

<reference anchor="RFC6335">
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname="M. Cotton" initials="M." surname="Cotton"/>
    <author fullname="L. Eggert" initials="L." surname="Eggert"/>
    <author fullname="J. Touch" initials="J." surname="Touch"/>
    <author fullname="M. Westerlund" initials="M." surname="Westerlund"/>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <date month="August" year="2011"/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="165"/>
  <seriesInfo name="RFC" value="6335"/>
  <seriesInfo name="DOI" value="10.17487/RFC6335"/>
</reference>

<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8766">
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8766"/>
  <seriesInfo name="DOI" value="10.17487/RFC8766"/>
</reference>

<reference anchor="RFC8290">
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname="T. Hoeiland-Joergensen" initials="T." surname="Hoeiland-Joergensen"/>
    <author fullname="P. McKenney" initials="P." surname="McKenney"/>
    <author fullname="D. Taht" initials="D." surname="Taht"/>
    <author fullname="J. Gettys" initials="J." surname="Gettys"/>
    <author fullname="E. Dumazet" initials="E." surname="Dumazet"/>
    <date month="January" year="2018"/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8290"/>
  <seriesInfo name="DOI" value="10.17487/RFC8290"/>
</reference>

<reference anchor="RFC8033">
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname="R. Pan" initials="R." surname="Pan"/>
    <author fullname="P. Natarajan" initials="P." surname="Natarajan"/>
    <author fullname="F. Baker" initials="F." surname="Baker"/>
    <author fullname="G. White" initials="G." surname="White"/>
    <date month="February" year="2017"/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8033"/>
  <seriesInfo name="DOI" value="10.17487/RFC8033"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC9293">
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname="W. Eddy" initials="W." role="editor" surname="Eddy"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="7"/>
  <seriesInfo name="RFC" value="9293"/>
  <seriesInfo name="DOI" value="10.17487/RFC9293"/>
</reference>

<reference anchor="RFC9330">
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname="B. Briscoe" initials="B." role="editor" surname="Briscoe"/>
    <author fullname="K. De Schepper" initials="K." surname="De Schepper"/>
    <author fullname="M. Bagnulo" initials="M." surname="Bagnulo"/>
    <author fullname="G. White" initials="G." surname="White"/>
    <date month="January" year="2023"/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9330"/>
  <seriesInfo name="DOI" value="10.17487/RFC9330"/>
</reference>




    </references>


<?line 951?>

<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9V965IbN5bmfzwFlt4JV82QVJVutmvD0VMuSXa1VXJZVR7H
7kyHBWaCJFrJRApAFkXbmtjX2DeZ//Mm+yQb54JLJllq9c7E7Kx/dJdIJhI4
ODiX71wwm81EMKHRZ/K19p1tvbnTrfZe9m2tnfzZuremXckL29YmGNt6oRYL
p+8+/fe1rVq10WeydmoZZkaH5cx03WbmBgPMTh6JWgV9JioV9Mq63Zn0oRbC
94uN8d7Y9nbX6TN5+fz2hahsbdrVmezDcvalMJ07k8H1Pjw8Ofnq5KFQTqsz
eetU6zvrgtha93blbN+dyctrea3d0rqNaistr7TyvdMb3QbxVu+21tVn8rIN
2rU6zJ7BlIXwQbX1L6qxrT6TO+1FZ87kPwZbTaW3Lji99FPpdxv4409CqD6s
rTsTUs6ElFKa1p/Ji7m8VspXa/yIKHKxdsYH263Lr6xbncnzrmu0vGyrOX7m
g9M6nMkfWs1fXSv3Vv6sdvh1ZcLuTF70nXbBtHYqL1Rjlta1RsmvnpycPqZf
2b4NQNafWhN0LW+CCtpLu5TnG+1MpfBXeqNMcyarDmf09wreNq/sRgyX83ou
r/ROu2I1r1Vbq6YpPv/PsRTnNvcu42YuL9bar43TxUpuQq9cGH7zn2MtFU/p
3gX9PJffqe1b0/piPT+bphl8jIv5qTV32nkTdvCyC9NWpm1VMOX71vjQdv33
fQUfzPtqruteiBbOTzB3Grj89YuLr05PT86EMO2y/OKbfrnUbtFYFc5w1Hwy
pJQzmvEf5/JbHcLODz79fi5fmWptG/qYZdSkHFE+A2LTJ16aVoa1Tkd3Qhuk
ndEeZnUmL+xm07emUiiWYMnw+/OLq6n8B9v0Gy2fPJnKV/1moZ08lUcPT04f
HgspL9Rbff/sb+fyu3/9F9Ootp798V//xa1063U7+MmzubxV6zBe9JV1wbaD
1V0bXWncjPPvn5/Jc5hz5/Rao5SUP/a61/JKtWqFAkve2KaH1cildfI7u9Hy
WxX0Vu38/vIfnpx+KS+fP3/OJEIyqEbe7Dad9abfSNvKl7ZSjVRtLa90cLaz
jQmqledOK/lKBxCjXh69PH91df7qmHb+9OTRY2aCx0+fPOU/nzx68kX884sv
n/CfTx89Sn9+8fRh/vMR//nl09P4gy+/eBoH+/LhVyfxz5NH6bcPn3wVue/h
V/HTrx49AkaczWZSLXxwqgpCvLBOblS7kzutnJ9KJRtVvQVCD3XQVN4pZ2zv
m52sVNPoWjRqNZWNCrqtdlNpnVxkDpzKtfJyoXUrna7sqjW/6looL1UrezgJ
oW9V0FO56IOs7GZjW1QTXbAb5Fdbq93nXrZM2bl4fqdbqZZBO6lkrStVIzvA
t7A9qIeUq82voGODrtbAz430zAd+KkyQDs5u66Xid8rO2UWjN8glwPO6rWXv
tfNzAW90O9tqOXnb2q2fyLBWQZogjZcTPOXNBB9U8s7U2srKtkvtNOjOYMVa
3ek4vpfbtW6ltxu9sPVO6sZrqYJcA2MaL7YqVGuYuJKPv5cbe2c0ELTvGqtA
m8tubYP1cunsBuZpHHzS6rn4zm71nXZT+NTBWLK1xfKdVp4PQVgbL4OVC40r
rZTXc3HZyqWqQtpd+Q4P0iYfpERAWpC3zZ2ucQRe21yIH3oXdwqI0OqKBEll
22DaHsghPTIHrQCZQFWV7oJaNFqqDQh6YZeZnVobmLaRHw/tKbKPU7D24pdq
qxwyrWBJFncZTm+tu8bucGl2KU3webi5+FnLhW6MvtO02ZXTKtC+BGsb+nBD
dpHfG3oDu6i97LTtGv25F7Azu1rtpH7fgbwBztiCwsFxaR9aXWnvldvlaU8F
jOa075sAhwH4fQMfAUGK2Ypb2NLaVj3tVKcrszQ8scnICL3VPhC70vxhVcMj
PheXAZjfF4cj2Mo2nlanq7Vqjd8gFzER8LCIYnk8CRARO2J6WiQxh4nG8JaN
4SoZw3Nxu9ZxWFyP8UA3p73XtVReTl7bvq1nwZnOg6Eqr0zbBz2RR6+vr46R
Zn5t+6YGFjdt1fS1ruXWhLVcWVt3fZBHfUdMYLftMfwlTN3oyHXwksqZgExm
2hoUonWoD+MC3vWqMWE3JzG6MXXdaCE+A8XhbN0j3/9/I1Tlb78VRsOHD3MR
taaXjXmr5fLdL5WtdSN/+411zYcPU3l9+Zw/OHn0CD4AM0D+9hv834cPMOeX
j2/oF6ByPnyQKDlw3llMw8zbWipH0gEEoX4fYN+3ptbNTppN1yAj6HouXsFR
CmvdINXogEkf4CyVgqUg1lyI8yasbb9aS29WLTJlG1BQwtiqCqA3gH/L41mp
FiUk+EcmWLeT4Aai4PdTFBd6udRVIEkbpGrAppB3xhuQZMHi+DDqXPy81i3M
W6ryAKgKbMBmJxcaTkCP3B1w6GUPskF1CszjqViw/QZzWsJSmXtZekSuReHu
1HJpKjpEde/QhCFDznpNA8fhNgreLRfO6OWZUHKja9NvZh72BN7Dq1+CVkE2
UC3ZvFKFoKo1OoQHtNNUwER5cove+YBHJ07Td+at9nNx3kr9XsHm0vyMB6o0
aiVtVfUOBVNN8okVa9arU7FFNacKNQNP41qaHZz/bQvHuG89qhYUktpr+MaF
WWNAedXGu74jPt8A75og18rVsHutcs5uUUCwmuxBT44VA1kBWXYHGxeuBjwu
twq+FFFcwvaxUNuTvuISZRbaL2s9+nqGcnPGcnOW5aYM2gehNrZdSYuKsJCh
h2SXPNLz1XwaZSKewlIKHsstClGnDBgpUSnJfV0qNBLZ+DXZTu87XQXiPJoP
WlJEMDJa4lQ6Z2FnnWd1LEqt9tln8la7jWltY1c7Ic5BW9RSLWyP48ig3UZO
irM+kbMZnbu21t44NCp4OXR4K7vRbD4p6WwPZqR1TLA4K/2uNx1yN42NO2Gt
3PTVWtYqqPlI46KyTDMCQSxXutVONbLWvnKmi8dwoeok1UXvYeSNdUBNXQGZ
YYXwIbH3VjmnSPCJyUt6bIKyQ3Y2aXB9QKGIhUaOBQZlUYacHe3bOL2uXzSm
ArZFvkKWJeHRtyCJQCz37VJtTGOUk0eTLYlAqeTGNI3xGjjwDxNSouinA71C
b0C4yaPJ6cmJ3Hhd0c4osCP7tvbIdSBSTfjcS9s2OzCtdBvWaLhJGve/TI7x
OPigVT2VWy1rvTStLnbfHYLY9q2KiQBbhc941WjlaDZbjUvMppBqGjI6/9z7
gOdhWgxDFhnQdeIKI6SD08ZGiPLMgSYQIVV9p9qgVrhNtOWHny0fJX24tbOl
beoz+cI4H0DtwPzs1rNJDL+MSklO4Nm1WQEnw58LHYJ2k7lEXn1r2hon0JLI
ssugW+K9vF0wqm7rGXs+N7gJpCmdalc6nv071fTA8Rp2klwJhWvCbx/ParOC
t7RBr7TjR7drU60FcE7jLUh0GENq5Ulo2k2nWC463Gy1UmDywnKBZLTg0XxR
JL8wLRiZyB4EvJpoU+Nig5WT19dXEzC/tqZ9y7pZTJy+S2ZOuYORMWCb4bWV
AqqsTKv3bW3iR7S8VLOyzoR1diIPmt60X/p915jKhGaX3YhPZOW9OZgNALge
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
AA==

-->

</rfc>

